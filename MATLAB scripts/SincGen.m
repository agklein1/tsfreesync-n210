function [ table ] = SincGen(template, ampl, spb, delay )
% table = SincGen(template,ampl,spb,delay)
% This function takes the oversampled pulse from SincInit.m and
% downsamples it with a shift
% This function requires SincInit.m to be run first
% Outputs :
%   table, the undersampled shifted pulse
% Inputs :
%   template, the oversampled pulse generated by SincInit.m
%   spb, the length of the undersampled pulse (Usually 1000)
%   delay, number of samples to delay the undersampled pulse

global SCALAR;  % 32767, initialized in SincInit.m
global STU;     % 1,     initialized in SincInit.m

ratio = length(template)/spb; % Derive ratio from oversampled sinc
scale = ampl/SCALAR;          % Calculate scalar value

% Make delay always greater than 0
if (delay < 0.0)
    delay = delay + spb;
end

    % keep delay below spb
delay = rem(delay,spb);

% scale delay to upsampled scale
shift = delay*ratio;


j = 0;
i = 0;
table = zeros(1,spb);

OS_len = spb*ratio;


% Generate first part of delayed pulse
for i = shift:ratio:OS_len-1
    table(j+STU) = scale * template(floor(i+STU));
    j = j + 1;
end

% Save remainder from previous loop
remain = OS_len-i;

% Generate second part of delayed pulse
for i = ratio-remain:ratio:shift-ratio-1
    table(j+STU) = scale * template(floor(i+STU));
    j = j + 1;
end

end

